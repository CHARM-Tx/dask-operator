name: "Build & Test"
on:
  push:
    tags: [v*]
    branches: [master]
  pull_request: ~

env:
  K8S_CODEGEN_VERSION: 0.27.4
  CONTROLLER_GEN_VERSION: 0.13.0
  REGISTRY: ghcr.io
  IMAGE: ${{ github.repository }}

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: set up buildx
        uses: docker/setup-buildx-action@v2
      - name: build operator image
        uses: docker/build-push-action@v3
        with:
          context: .
          load: true
          tags: dask-operator:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            K8S_CODEGEN_VERSION=${{ env.K8S_CODEGEN_VERSION }}
            CONTROLLER_GEN_VERSION=${{ env.CONTROLLER_GEN_VERSION }}
      - name: Create kind cluster
        run: |
          kind create cluster --config test/e2e/kind.yaml --kubeconfig test/e2e/kubeconfig.yaml
      - name: Load operator images
        run: |
          docker pull ghcr.io/dask/dask:latest
          kind load docker-image dask-operator:latest ghcr.io/dask/dask:latest
      - uses: actions/setup-go@v3
        with:
          go-version: "^1.21"
      - uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            go-
      - name: install dependencies
        run: |
          go install \
            k8s.io/code-generator/cmd/client-gen@v${{ env.K8S_CODEGEN_VERSION }} \
            k8s.io/code-generator/cmd/deepcopy-gen@v${{ env.K8S_CODEGEN_VERSION }} \
            k8s.io/code-generator/cmd/lister-gen@v${{ env.K8S_CODEGEN_VERSION }} \
            k8s.io/code-generator/cmd/informer-gen@v${{ env.K8S_CODEGEN_VERSION }} \
            k8s.io/code-generator/cmd/applyconfiguration-gen@v${{ env.K8S_CODEGEN_VERSION }}
          go install sigs.k8s.io/controller-tools/cmd/controller-gen@v${{ env.CONTROLLER_GEN_VERSION }}
      - name: test
        run: |
          go generate ./...
          go test ./...
      - name: Archive CRDs
        uses: actions/upload-artifact@v3
        with:
          name: crds
          path: |
            config/crd

  # Publish container images in a separate step, building both aarch64 and amd64
  publish-image:
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: read
      packages: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: set up qemu
        #Â For aarch64 builder support
        uses: docker/setup-qemu-action@v2
      - name: set up buildx
        uses: docker/setup-buildx-action@v2
      - name: log in to registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: extract tags
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE }}
      - name: build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            K8S_CODEGEN_VERSION=${{ env.K8S_CODEGEN_VERSION }}
            CONTROLLER_GEN_VERSION=${{ env.CONTROLLER_GEN_VERSION }}
      - name: Bundle controller manifests
        run: |
          cat <<EOF >> deploy/kustomization.yaml
          images:
            - name: ghcr.io/charm-tx/dask-operator:latest
              newTag: ${{ steps.meta.outputs.version }}
          EOF

          tar -czf manifests.tar.gz deploy/
      - name: Archive manifests
        uses: actions/upload-artifact@v3
        with:
          name: manifests
          path: |
            manifests.tar.gz

  release:
    runs-on: ubuntu-latest
    needs: test
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    permissions:
      contents: write
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: crds
      - uses: actions/download-artifact@v3
        with:
          name: manifests
      - uses: softprops/action-gh-release@v1
        with:
          files: |
            dask.charmtx.com_*.yaml
            manifests.tar.gz
